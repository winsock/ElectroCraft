local tArgs = {...}
local path = ""
local currentFile
local shell = {}
local programEnv = {
	["shell"] = shell
}
setmetatable(programEnv, {__index = _G})

function saveShell(nbttagcompound)
	nbttagcompound:setString("path", path)
	nbttagcompound:setString("currentFile", currentFile)
end

function shell.run(file, ...)
	local found, func, err = loadfile(path .. "/" .. file)
	if not found then
		found, func, err = loadfile("/rom/programs/" .. file)
	end
	if err or not found then
		return false, err
	end
	if func then
		setfenv(func, programEnv)
		currentFile = file
		local ok, err = os.run(func, ...)
		currentFile = nil
		return ok, err
	end
end

function shell.path()
	return path
end

function shell.setPath(newPath)
	path = newPath
end

if #tArgs == 1 then
	path = tArgs[1]:getString("path")
	currentFile = tArgs[1]:getString("currentFile")
	shell.run(currentFile, tArgs[1])
end

local history = {}
local line = ""
local col = 1
local historyNumber = 0
local prompt = path .. "> "

os.registerSaveHandler(saveShell)

write(prompt)
while true do
	local event, key = os.waitForEvent("key", "code")
	prompt = path .. "> "
	getTerminal():setEditing(true)
	if key == "\n" then
		write("\n")
		local params = {}
		for match in string.gmatch(line, "[^ \t]+") do
			table.insert(params, match)
		end
		if #params > 0 then
			getTerminal():setEditing(false)
			local ok, err = shell.run(params[1], unpack(params, 2))
			if not ok and err then
				print(err)
			end
		end
		table.insert(history, line)
		line = ""
		col = 1
		write(prompt)
	elseif event == "key" then
		local front = ""
		local back = ""
		if col - 1 > 0 then
			front = line:sub(1, col - 1)
		end
		if line:len() >= col + 1 then
			back = line:sub(col + 1, line:len())
		end
		line = front .. key .. back
		col = col + 1
		getTerminal():clearLine()
		write(prompt .. line)
		getTerminal():setPosition(getTerminal():getCurrentRow(), col + prompt:len())
	elseif event == "code" then
		if key == getKeyboard().backspaceScanCode then
			if line:len() > 0 then
				line = line:sub(0, line:len() - 1)
				getTerminal():deleteChar(false)
			end
		elseif key == getKeyboard().leftScanCode then
			if col > 0 then
				col = col - 1
				getTerminal():setPosition(getTerminal():getCurrentRow(), col + prompt:len())
			end
		elseif key == getKeyboard().rightScanCode then
			if col < line:len() then
				col = col + 1
				getTerminal():setPosition(getTerminal():getCurrentRow(), col + prompt:len())
			end
		elseif key == getKeyboard().upScanCode then
			if #history > 0 and #history > historyNumber then
				historyNumber = historyNumber + 1
				local oldLine = line
				line = history[historyNumber]
				table.insert(history, oldLine)
				col = line:len()
				getTerminal():clearLine()
				write(prompt .. line)
			end
		elseif key == getKeyboard().downScanCode then
			if historyNumber > 0 then
				history[historyNumber] = line
				historyNumber = historyNumber - 1
				line = history[historyNumber]
				if line then
					col = line:len()
				else
					col = 1
				end
				getTerminal():clearLine()
				write(prompt .. line)
			end
		end
	end
	getTerminal():setEditing(false)
end